# Template to publish packages on Internal feeds

parameters:
# feed where package needs to be uploaded.
- name: publishEndpoint
- name: internalFeedName
- name: templates

steps:

# Download Staging Settings from SecureFile Library
- task: DownloadSecureFile@1
  name: stagingsettings
  displayName: 'Download Staging Settings File'
  inputs:
    secureFile: stagingsettings.xml
    retryCount: 5
  condition: eq('${{ parameters.publishEndpoint }}', 'staging')

- task: DownloadSecureFile@1
  displayName: 'Download Code Signing Certificate'
  name: CodeSigningCert
  inputs:
    secureFile: '51Degrees Private Code Signing Certificate.pfx'
    retryCount: 5
  continueOnError: true

- template: java/shared-package-signing-steps.yml@${{ parameters.templates }}
  parameters:
    gpgPassPhrase: $(JavaMavenGPGKeyPassphrase)

# Connect to internal feed
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: '${{ parameters.internalFeedName }}'

# Task for deployment of package on internal feed.
- task: Maven@1
  displayName: 'Maven Deploy Internal'
  inputs:
    mavenPomFile: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/pom.xml'
    goals: deploy
    options: '-Pbuild -Dhttps.protocols=TLSv1.2 -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -Dpublishrepository.id=$(publishrepository.id) -Dpublishrepository.url=$(publishrepository.url) -Dskippackagesign=false -Dgpg.passphrase=$(JavaMavenGPGKeyPassphrase) -Dkeystore="$(CodeSigningCert.secureFilePath)" -Dalias=$(CodeSigningCertAlias) -Dkeypass=$(CodeSigningCertPassword) -Dkeystorepass=$(CodeSigningCertPassword) -Dexec.skip=true -DskipTests=true'
    publishJUnitResults: false
    jdkVersionOption: $(jdkVersionDefault)
    mavenAuthenticateFeed: false
  condition: eq('${{ parameters.publishEndpoint }}', 'internal-feed')

# Task for deployment of package on staging.
- task: Maven@1
  displayName: 'Maven Deploy Staging'
  inputs:
    mavenPomFile: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/pom.xml'
    goals: deploy
    options: '-Pbuild -Dhttps.protocols=TLSv1.2 -Dskippackagesign=false -Dgpg.passphrase=$(JavaMavenGPGKeyPassphrase) -Dkeystore="$(CodeSigningCert.secureFilePath)" -Dalias=$(CodeSigningCertAlias) -Dkeypass=$(CodeSigningCertPassword) -Dkeystorepass=$(CodeSigningCertPassword) -s $(stagingsettings.secureFilePath) -Dexec.skip=true -DskipTests=true'
    publishJUnitResults: false
    jdkVersionOption: $(jdkVersionDefault)
    mavenAuthenticateFeed: false
  condition: eq('${{ parameters.publishEndpoint }}', 'staging')
