# Template to publish packages on Internal feeds

parameters:
# feed where package needs to be uploaded.
- name: publishEndpoint
# resource key to be used in cloud tests
- name: resouceKey

steps:

# Download Code Signing Certificate from SecureFile Library
- task: DownloadSecureFile@1
  name: CodeSigningCert
  displayName: 'Download secure file'
  inputs:
    secureFile: '51Degrees Code Signing Certificate.asc'
    retryCount: 5

# Download Staging Settings from SecureFile Library
- task: DownloadSecureFile@1
  name: stagingsettings
  displayName: 'Download Staging Settings File'
  inputs:
    secureFile: stagingsettings.xml
    retryCount: 5
  condition: eq('${{ parameters.publishEndpoint }}', 'staging')

#  Import 51Degrees Code Signing Certificate   
- bash: 'echo $(gpg_passphrase) | gpg --import --batch --yes --passphrase-fd 0 "$(CodeSigningCert.secureFilePath)"'
  displayName: 'Import Code Signing Certificate'

# Connect to internal feed
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: 'pipeline-insider'

# Task for deployment of package on internal feed.
- task: Maven@1
  displayName: 'Maven Deploy Internal'
  inputs:
    mavenPomFile: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/pom.xml'
    goals: deploy
    options: '-Pbuild -Dhttps.protocols=TLSv1.2 -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -Dpublishrepository.id=$(publishrepository.id) -Dpublishrepository.url=$(publishrepository.url) -Dskippackagesign=false -Dgpg.passphrase=$(gpg_passphrase) -Dexec.skip -DSuperResourceKey=${{ parameters.resouceKey }}'
    publishJUnitResults: false
    jdkVersionOption: $(jdkVersionDefault)
    mavenAuthenticateFeed: false
  condition: eq('${{ parameters.publishEndpoint }}', 'internal-feed')

# Task for deployment of package on staging.
- task: Maven@1
  displayName: 'Maven Deploy Internal'
  inputs:
    mavenPomFile: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/pom.xml'
    goals: deploy
    options: '-Pbuild -Dhttps.protocols=TLSv1.2 -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -Dskippackagesign=false -Dgpg.passphrase=$(gpg_passphrase) -s $(stagingsettings.secureFilePath) -Dexec.skip -DSuperResourceKey=${{ parameters.resouceKey }}'
    publishJUnitResults: false
    jdkVersionOption: $(jdkVersionDefault)
    mavenAuthenticateFeed: false
  condition: eq('${{ parameters.publishEndpoint }}', 'staging')