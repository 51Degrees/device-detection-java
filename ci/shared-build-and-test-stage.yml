# Build and test stage template

parameters:
# stageName: Stage name
# imageName: image on which stage needs to be run
- name: stageName
- name: imageName
- name: runTests
  type: string
  default: 'On'

stages:

- stage: ${{ parameters.stageName }}
  dependsOn: [Data]
  
  jobs:
  - job: 'Build_and_Test'
    displayName: Build and Test
    condition: ne(${{ parameters.runTests }}, 'Off')

    variables: 
    - group: InternalKeys
    - group: CIAutomation
      
    strategy:
      matrix:
        JDK8:
          jdkVersion: '1.8'
        JDK11:
          jdkVersion: '1.11'
        JDK17:
          jdkVersion: '1.17'

    pool:
      vmImage: ${{ parameters.imageName }}
          
    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Data Files'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'enterpriseFile'
        downloadPath: '$(System.ArtifactsDirectory)'

    - script: |   
          mv $(System.ArtifactsDirectory)/enterpriseFile/Enterprise-HashV41.hash  $(Build.SourcesDirectory)/device-detection-cxx/device-detection-data/Enterprise-HashV41.hash
      displayName: 'Move Data Files'

    - bash: |
        sudo apt-get update
        sudo apt-get -y install \
          gcc-multilib \
          g++-multilib
      displayName: 'Install gcc-multilib and g++-multilib packages'
      condition: contains('${{ parameters.imageName }}', 'ubuntu')
      
    # Java 17 is not currently available on MS hosted Linux build agents.
    # Download Open JDK 17 archive.
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          mkdir $(System.DefaultWorkingDirectory)/java-bin
          cd $(System.DefaultWorkingDirectory)/java-bin
          wget -nv https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz
      condition: and(eq('${{ parameters.stageName }}', 'Linux'), eq(variables.jdkVersion, '1.17'))
      displayName: Download OpenJDK 17

    # Extract and install Open JDK 17.
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'LocalDirectory'
        jdkFile: '$(System.DefaultWorkingDirectory)/java-bin/openjdk-17_linux-x64_bin.tar.gz'
        jdkDestinationDirectory: '$(agent.toolsDirectory)/jdk17'
        cleanDestinationDirectory: true
      condition: and(eq('${{ parameters.stageName }}', 'Linux'), eq(variables.jdkVersion, '1.17'))
      displayName: Install OpenJDK 17

    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: '$(InternalFeedName)'

    - task: Maven@1
      displayName: 'Maven test'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        options: '-Dhttps.protocols=TLSv1.2 -DfailIfNoTests=false -DXmx2048m -Dgpg.skip=true -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -DFOD_CLOUD_API_URL=$(FOD_CLOUD_API_URL) -DSuperResourceKey=$(SuperResourceKey) -DAcceptChPlatformKey=$(AcceptChPlatformKey) -DAcceptChHardwareKey=$(AcceptChHardwareKey) -DAcceptChBrowserKey=$(AcceptChBrowserKey) -DAcceptChNoneKey=$(AcceptChNoneKey)'
        jdkVersionOption: $(jdkVersion)
        testRunTitle: '${{ parameters.imageName }}-$(jdkVersion)'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml' 
        testRunTitle: '${{ parameters.imageName }}-$(jdkVersion)'
        failTaskOnFailedTests: true
      condition: succeededOrFailed()
