name: Build and Test Device Detection Java

pr:
- master
- develop
- release/*

trigger: none

stages:

- stage: Data

  jobs:
  - job: Get_Data_File_For_Tests

    pool:
      'vmImage': 'ubuntu-latest'

    variables: 
    - group: InternalKeys
      
    steps:
    
    - bash: |
    - script: |
        curl "https://distributor.51degrees.com/api/v2/download?LicenseKeys=$(licensekey)&Type=HashV41&Download=True&Product=V4Enterprise" --output Enterprise-HashV41.hash.gz
      displayName: 'Download Enterprise Data File'

    - task: ExtractFiles@1
      displayName: 'Extract Data File'
      inputs:
        archiveFilePatterns: 'Enterprise-HashV41.hash.gz'
        cleanDestinationFolder: false
        overwriteExistingFiles: true
        
    - script: |    
          mv $(Build.SourcesDirectory)/Enterprise-HashV41.hash $(Build.ArtifactStagingDirectory)/Enterprise-HashV41.hash
      displayName: 'Move Data Files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'enterpriseFile'
        publishLocation: 'Container'

- stage: Build
  dependsOn: [Data]
  jobs: 
  - job: 'Build_and_Test'
     
    strategy:  
      matrix:
        linux-JDK8:
          imageName: 'ubuntu-latest'
          jdkVersion: '1.8'
        linux-JDK11:
          imageName: 'ubuntu-latest'
          jdkVersion: '1.11'
        mac-JDK8:
          imageName: 'macos-latest'
          jdkVersion: '1.8'
        mac-JDK11:
          imageName: 'macos-latest'
          jdkVersion: '1.11'
        windows-JDK8:
          imageName: 'vs2017-win2016'
          jdkVersion: '1.8'
        windows-JDK11:
          imageName: 'vs2017-win2016'
          jdkVersion: '1.11'

    variables: 
    - group: InternalKeys

    pool:
      vmImage: $(imageName)

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - powershell: |
        git lfs install
        ls
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs fetch
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs checkout
        ls
      workingDirectory: 'device-detection-cxx/device-detection-data'
      displayName: 'Fetch LFS Data Files'


    - task: DownloadBuildArtifacts@0
      displayName: 'Download Data Files'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'enterpriseFile'
        downloadPath: '$(System.ArtifactsDirectory)'

    - script: |   
          mv $(System.ArtifactsDirectory)/enterpriseFile/Enterprise-HashV41.hash  $(Build.SourcesDirectory)/device-detection-cxx/device-detection-data/Enterprise-HashV41.hash
      displayName: 'Move Data Files'

    - bash: |
        sudo apt-get update
        sudo apt-get -y install \
          gcc-multilib \
          g++-multilib
      displayName: 'Install gcc-multilib and g++-multilib packages'
      condition: contains(variables['imageName'], 'ubuntu')

    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'pipeline-insider'

    - task: Maven@1
      displayName: 'Maven test'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        options: '-Dhttps.protocols=TLSv1.2 -DfailIfNoTests=false -DXmx2048m -Dgpg.skip=true -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -DSuperResourceKey=$(SuperResourceKey)'
        jdkVersionOption: $(jdkVersion)
        testRunTitle: '$(imageName)-$(jdkVersion)'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
